{
  tokens=[
    SEMI=';'
    EQ='='
    LP='('
    RP=')'

    NEW_LINE='regexp:\s*\n+\s*'
    space='regexp:\s+'
    lint_comment='regexp://.*'
    comment='regexp:(//.*)|(/\*(.|\s)*?\*/)'
    number='regexp:\d+(\.\d*)?'
    FLOAT='regexp:\d+(\.\d*)?'
    KEYWORD='regexp:import|as'
//    IDENTIFIER='regexp:\w*'
    IDENTIFIER='regexp:\p{Alpha}\w*'
    STRING="regexp:('([^'\\]|\\.)*'|\"([^\"\\]|\\.)*\")"

    op_1='+'
    op_2='-'
    op_3='*'
    op_4='/'
    op_5='!'
    dot='.'
  ]

//  name(".*expr")='expression'
//  extends(".*expr")=expr
    pin("import_.*")=1
}

root ::= imports root_object? (NEW_LINE | comment)*
//root ::= imports
//root ::= qml_object

// IMPORTS
private imports ::= (NEW_LINE | comment | (import_item (NEW_LINE | SEMI)))*
import_item ::= !<<eof>> "import" comment* import_location ["as" identifier] {
    pin=2
    recoverWhile=import_item_recover
}
private import_item_recover ::= !(NEW_LINE | SEMI)

private import_location ::= import_version | import_path
import_version ::= import_name FLOAT
import_name ::= identifier [DOT identifier] {
    pin=1
    recoverWhile=import_name_recover
}
private import_name_recover ::= !(NEW_LINE | FLOAT)
import_path ::= string

// OBJECT
root_object ::= !<<eof>> qml_object

qml_object ::= object_name "{" (NEW_LINE | comment | assignment_item (NEW_LINE | SEMI))*  "}" {
    pin=1
    recoverWhile=qml_object_recover
}
private qml_object_recover ::= !("}" | ) // WTF
//private qml_object_recover ::= !("}" | <<eof>>)
object_name ::= identifier [DOT identifier] {
    pin=1
//    recoverWhile=object_name_recover
}
private object_name_recover ::= !("{")

assignment_item ::= assignment_name ":" assignment_value {
    pin(".*")=1
//    recoverWhile=assignment_item_recover
}
private assignment_item_recover ::= !("}" | NEW_LINE | SEMI)
assignment_value ::= float | number | string | dotted_name

//import_name ::= dotted_name
assignment_name ::= dotted_name
private dotted_name ::= identifier [DOT identifier] {
//    pin=1
//    recoverWhile=dotted_name_recover
}
