<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
  <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
  <id>com.qmlplugin.QmlPlugin</id>

  <!-- Public plugin name should be written in Title Case.
       Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
  <name>Qml Support</name>

  <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
  <vendor email="sukovanchenko.d@gmail.com">Sukovanchenko Dmytro</vendor>

  <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
       Qml HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
       Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
  <description><![CDATA[
    QML files support <br>
    <br><br>
Plugin helps to work with QML (Qt Modeling Language)

Features:
<ul>
<li>Syntax highlighting</li>
<li>Incorrect syntax recognition</li>
<li>Customizable Code Color Scheme</li>
<li>Commenting blocks of code</li>
</ul>
Features for successful parsed files:
<ul>
<li>Jumping to id declaration</li>
<li>Blocks folding</li>
<li>Finding usages of given id</li>
<li>Renaming ids</li>
</ul>
  ]]></description>

  <!-- Product and plugin compatibility requirements.
       Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
  <depends>com.intellij.modules.platform</depends>
<!--  <depends>com.intellij.java</depends>-->

  <!-- Extension points defined by the plugin.
       Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
  <extensions defaultExtensionNs="com.intellij">

    <fileType name="QML File" implementationClass="com.qmlplugin.language.QmlFileType" fieldName="INSTANCE"
              language="QML" extensions="qml"/>
    <lang.parserDefinition language="QML" implementationClass="com.qmlplugin.language.QmlParserDefinition"/>
    <lang.syntaxHighlighterFactory language="QML"
                                   implementationClass="com.qmlplugin.language.QmlSyntaxHighlighterFactory"/>
    <iconProvider implementation="com.qmlplugin.language.QmlPropertyIconProvider"/>
    <colorSettingsPage implementation="com.qmlplugin.language.QmlColorSettingsPage"/>
    <annotator language="QML" implementationClass="com.qmlplugin.language.QmlAnnotator"/>
    <codeInsight.lineMarkerProvider language="QML"
                                    implementationClass="com.qmlplugin.language.QmlLineMarkerProvider"/>
    <completion.contributor language="QML"
                            implementationClass="com.qmlplugin.language.QmlCompletionContributor"/>

    <psi.referenceContributor language="QML"
                              implementation="com.qmlplugin.language.QmlReferenceContributor"/>
    <lang.refactoringSupport language="QML"
                             implementationClass="com.qmlplugin.language.QmlRefactoringSupportProvider"/>
    <lang.findUsagesProvider language="QML"
                             implementationClass="com.qmlplugin.language.QmlFindUsagesProvider"/>
    <lang.foldingBuilder language="QML" implementationClass="com.qmlplugin.language.QmlFoldingBuilder"/>
    <gotoSymbolContributor implementation="com.qmlplugin.language.QmlChooseByNameContributor"/>
    <lang.psiStructureViewFactory language="QML"
                                  implementationClass="com.qmlplugin.language.QmlStructureViewFactory"/>
<!--    <navbar implementation="com.qmlplugin.language.QmlStructureAwareNavbar"/>-->
    <lang.formatter language="QML" implementationClass="com.qmlplugin.language.QmlFormattingModelBuilder"/>
    <codeStyleSettingsProvider implementation="com.qmlplugin.language.QmlCodeStyleSettingsProvider"/>
    <langCodeStyleSettingsProvider implementation="com.qmlplugin.language.QmlLanguageCodeStyleSettingsProvider"/>
    <lang.commenter language="QML" implementationClass="com.qmlplugin.language.QmlCommenter"/>
    <lang.documentationProvider language="QML" implementationClass="com.qmlplugin.language.QmlDocumentationProvider"/>
    <spellchecker.support language="QML" implementationClass="com.qmlplugin.language.QmlSpellcheckingStrategy"/>

    <additionalTextAttributes scheme="Default" file="colorSchemes/MyLangDefault.xml"/>

  </extensions>
</idea-plugin>